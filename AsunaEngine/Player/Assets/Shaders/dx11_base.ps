
Texture2D tBaseMap;
SamplerState tBaseMapSamplerState;

struct v2p {
	float4 position : SV_POSITION;
	float4 nw : NORMAL;
	float4 texcoord : TEXCOORD;
};

struct DirectionLight
{
    float4 direction;
    float4 color;
    float4 intensity;
};

struct SpotLight
{
    float4 position;
    float4 color;
    float4 intensity;
};

cbuffer ConstantBufferPerFrame : register(b0)
{
    matrix viewMatrix;
    matrix projectionMatrix;
    matrix vp;
    DirectionLight directionLight;
    SpotLight spotLights[4];
};
cbuffer ConstantBufferPerObject : register(b1)
{
    matrix worldMatrix;
}

cbuffer ConstantBufferPerMaterial : register(b2)
{
    float4 mainColor;
    matrix modelMatrix;
}

float4 main(v2p input) : SV_TARGET
{
    float4 baseColor = tBaseMap.Sample(tBaseMapSamplerState, input.texcoord.xy);
    float diffLight = max(dot(input.nw.xyz, -directionLight.direction.xyz), 0.0);
    float envLight = 0.4;
    float lighting = (diffLight + envLight);
    return float4(baseColor.xyz * lighting, 1);
}

